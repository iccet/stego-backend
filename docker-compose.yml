version: "3"

services:

  stego-backend:
    container_name: stego-backend
    build: .
    ports:
      - "${BACKEND_PORT:-80}:80"
    depends_on:
      - kafka
      - cache
      - database
    environment:
      - DATABASE_CONNECTION_STRING=Server=database;Port=5432;Database=stego;User Id=stego;Password=Q12345q; Include Error Detail=true;
      - REDIS_CONNECTION_STRING=cache,password=Q12345q
      - TELEGRAM_TOKEN=$TELEGRAM_TOKEN
    restart: always
    networks:
      - stegobackend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - stegobackend

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
      - 9091:9091
    environment:
      KAFKA_CREATE_TOPICS: "stego-encode-image:1:3,stego-decode-image:1:1:compact"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - stegobackend

  stego-connect:
    image: cnfldemos/kafka-connect-datagen:0.4.0-6.1.0
    container_name: connect
    restart: always
    ports:
      - "8084:8083"
    depends_on:
      - zookeeper
      - kafka
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker:29092
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
      CONNECT_LOG4J_LOGGERS: org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR

  database:
    container_name: database
    image: postgres:latest
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: Q12345q
      POSTGRES_USER: stego
      POSTGRES_DB: stego
    networks:
      - stegobackend

  cache:
    container_name: redis
    image: redis:latest
    ports:
      - "${CACHE_PORT:-6379}:6379"
    restart: always
    environment:
      - REDIS_PASSWORD=Q12345q
    networks:
      - stegobackend

networks:
  stegobackend:
    driver: bridge